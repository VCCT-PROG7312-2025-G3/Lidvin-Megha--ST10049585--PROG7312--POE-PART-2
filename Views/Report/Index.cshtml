@model PROG7312_POEPART2.Models.Issue
@{
    ViewData["Title"] = "Report Issues";
    var categories = ViewBag.Categories as string[] ?? new string[0];
}

<h2>Report an Issue</h2>

@if (TempData["Feedback"] != null)
{
    <div class="alert">@TempData["Feedback"]</div>
}

<form asp-action="Index" method="post" enctype="multipart/form-data">
    <div class="form-row">
        <label>Location</label>
        <input asp-for="Location" />
        <span class="field-validation">@Html.ValidationMessageFor(m => m.Location)</span>
    </div>

    <div class="form-row">
        <label>Category</label>
        <select asp-for="Category">
            <option value="">-- Select Category --</option>
            @foreach (var c in categories)
            {
                <option value="@c">@c</option>
            }
        </select>
        <span class="field-validation">@Html.ValidationMessageFor(m => m.Category)</span>
    </div>

    <div class="form-row">
        <label>Description</label>
        <textarea asp-for="Description" rows="6"></textarea>
        <span class="field-validation">@Html.ValidationMessageFor(m => m.Description)</span>
    </div>

    <div class="form-row">
        <label>Attach image or document</label>
        <input type="file" name="media" />
    </div>

    <div class="form-row">
        <button type="submit" class="btn">Submit</button>
        <a class="btn secondary" href="/">Back to Main Menu</a>
    </div>

    <div class="engagement">
        <label id="encourage">Be a civic hero — thank you for reporting!</label>
        <progress id="reportProgress" max="100" value="25"></progress>
    </div>
</form>

@section Scripts {
    <script>
        // Simple engagement: rotate encouraging messages and animate progress.
        const messages = [
          'Be a civic hero — thank you for reporting!',
          'Your voice matters — keep reporting issues!',
          'Small reports = big improvements in our community!',
          'Thanks! You help make the municipality better.'
        ];
        let idx = 0;
        setInterval(() => {
          idx = (idx + 1) % messages.length;
          document.getElementById('encourage').innerText = messages[idx];
          const p = document.getElementById('reportProgress');
          p.value = 25 + ((idx + 1) * 15) % 100;
        }, 3500);
    </script>
}